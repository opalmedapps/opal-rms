# WEB SERVER SETTINGS
BASE_PATH=/var/www/orms
BASE_URL=http://127.0.0.1:8086
IMAGE_PATH=/var/www/orms/images
IMAGE_URL=http://127.0.0.1:8086/orms/images
LOG_PATH=/var/www/orms/logs
ORMS_PORT=8086

# DATABASE CONNECTION SETTINGS
# ORMS database settings
ORMS_DATABASE_USER=orms
ORMS_DATABASE_PASSWORD=wonder-expensive-thin-approve-sword
ORMS_DATABASE_HOST=host.docker.internal
ORMS_DATABASE_NAME=orms
ORMS_DATABASE_PORT=3308

# Log database settings
LOG_DATABASE_USER=orms
LOG_DATABASE_PASSWORD=wonder-expensive-thin-approve-sword
LOG_DATABASE_HOST=host.docker.internal
LOG_DATABASE_NAME=ormslog
LOG_DATABASE_PORT=3309

# FIREBASE SETTINGS
# URL of the Firebase realtime database (NOTE! The slash is required after .com)
FIREBASE_URL=https://your-realtime-db-url.firebaseio.com/
# Copy the `private_key_id` field from the private key JSON file that is issued during realtime database creation
FIREBASE_SECRET=your-secret-key

# HIGHCHARTS CONNECTION SETTINGS
# highcharts hostname (e.g., highchart's docker container name)
# Make sure that the highcharts container is running
# See 'Highcharts Export Server' repository for details on how to start the container
HIGHCHARTS_HOST=host.docker.internal
# highcharts port number
HIGHCHARTS_PORT=7801

# OPAL INTERFACE ENGINE (OIE) SETTINGS
# Setting to enable/disable OIE communication
OIE_ENABLED=0
OIE_URL=
OIE_USERNAME=
OIE_PASSWORD=

# SMTP MAILER SETTINGS
# Use the MUHCâ€™s SMTP server for sending e-mails.
# ORMS sends emails in 2 cases:
#  - An error occurs in a cron
#  - A new appointment code / clinic code combination is detected.
#    This was supposed to be used to notify the staff that there's
#    a new appointment type that should be enabled for SMS.
EMAIL_HOST=smtp.example.com
EMAIL_USER=example@muhc.mcgill.ca
EMAIL_PASSWORD=AuthorizationCode
EMAIL_SENT_FROM_ADDRESS=opal@muhc.mcgill.ca
EMAIL_PORT=587

# SMS SETTINGS
# Setting to enable/disable SMS messages
SMS_ENABLED=0
SMS_PROVIDER=
SMS_LICENCE_KEY=
SMS_TOKEN=
SMS_REMINDER_CRON_ENABLED=0
SMS_INCOMING_SMS_CRON_ENABLED=0

# NEW OPAL ADMIN SETTINGS
NEW_OPAL_ADMIN_URL=http://host.docker.internal:8000
# Create NEW token that is generated only for the ORMS. E.g., do not use the existing ones
# Please follow the steps described in the docs: https://opalmedapps.gitlab.io/backend/authentication/
# Make sure that users who need to access ORMS are added to the 'orms' group in the Django backend
NEW_OPAL_ADMIN_TOKEN=undefined

# SETTINGS FOR THE WEIGHTS
# Setting to enable/disable sending weights PDF to the OIE
SEND_WEIGHTS=0

# SETTINGS FOR THE VIRTUAL WAITING ROOM
# Setting for enabling cron job
VWR_CRON_ENABLED=0

# MESSAGE TRANSLATIONS
FAILED_CHECK_IN_MESSAGE_EN=
FAILED_CHECK_IN_MESSAGE_FR=
UNKNOWN_COMMAND_MESSAGE_EN=
UNKNOWN_COMMAND_MESSAGE_FR=

# List of the email addresses (a.k.a., recipients) who should get an email when new appointment type detected
# The list should be separated by comma (e.g., ",") with no space
RECIPIENT_EMAILS=first_email@opal.com,second_email@opal.com

# List of long codes
# TODO: investigate what list values we need to provide
# The list should be separated by comma (e.g., ",") with no space
REGISTERED_LONG_CODES=
